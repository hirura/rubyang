#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Rubyang
  module Xpath
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 836)
@@logger = Logger.new(self.name)
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,   104,    81,   -38,   137,   120,   121,   122,
    84,    28,    29,   107,   131,   138,   120,   121,   122,    81,
    81,   126,   109,    81,     5,    82,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    32,
    82,    82,    33,   110,    82,    26,    27,    28,    29,   120,
   121,   122,    42,   114,   115,   116,   117,   114,   115,   116,
   117,   -38,    49,   -38,   -38,   -38,   124,    50,    51,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
    73,    74,    75,    76,    77,    78,    79,     5,   154,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    32,    81,  -123,    33,   118,   119,    26,    27,
    28,    29,   112,   113,   156,    42,   114,   115,   116,   117,
   112,   113,   118,   119,    82,    49,   118,   119,   118,   119,
    50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
    60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
    70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     5,   157,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    32,   118,   119,    33,   158,
   159,    26,    27,    28,    29,   161,   111,   107,    42,   123,
   111,   101,   108,   102,    99,    80,   165,   166,    49,   136,
   134,   133,   132,    50,    51,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
    77,    78,    79,     5,   127,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    32,   nil,
   nil,    33,   nil,   nil,    26,    27,    28,    29,   nil,   nil,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    49,   nil,   nil,   nil,   nil,    50,    51,    52,    53,
    54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
    64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
    74,    75,    76,    77,    78,    79,     5,   nil,    13,    14,
    15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
    25,    32,   nil,   nil,    33,   nil,   nil,    26,    27,    28,
    29,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,    50,
    51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
    71,    72,    73,    74,    75,    76,    77,    78,    79,     5,
   nil,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    32,   nil,   nil,    33,   nil,   nil,
    26,    27,    28,    29,   nil,   nil,   nil,    42,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,
   nil,   nil,    50,    51,    52,    53,    54,    55,    56,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
    68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
    78,    79,     5,   nil,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    32,   nil,   nil,
    33,   nil,   nil,    26,    27,    28,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   nil,   nil,   nil,   nil,    50,    51,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
    75,    76,    77,    78,    79,     5,   nil,    13,    14,    15,
    16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
    32,   nil,   nil,    33,   nil,   nil,    26,    27,    28,    29,
   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,    50,    51,
    52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
    62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
    72,    73,    74,    75,    76,    77,    78,    79,     5,   nil,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    32,   nil,   nil,    33,   nil,   nil,    26,
    27,    28,    29,   nil,   nil,   nil,    42,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,
   nil,    50,    51,    52,    53,    54,    55,    56,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
    69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
    79,     5,   nil,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,    32,   nil,   nil,    33,
   nil,   nil,    26,    27,    28,    29,   nil,   nil,   nil,    42,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,
   nil,   nil,   nil,   nil,    50,    51,    52,    53,    54,    55,
    56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
    66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
    76,    77,    78,    79,     5,   nil,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,    32,
   nil,   nil,    33,   nil,   nil,    26,    27,    28,    29,   nil,
   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    49,   nil,   nil,   nil,   nil,    50,    51,    52,
    53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
    63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
    73,    74,    75,    76,    77,    78,    79,     5,   nil,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,    32,   nil,   nil,    33,   nil,   nil,    26,    27,
    28,    29,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,   nil,
    50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
    60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
    70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     5,   nil,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,    32,   nil,   nil,    33,   nil,
   nil,    26,    27,    28,    29,   nil,   nil,   nil,    42,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,
   nil,   nil,   nil,    50,    51,    52,    53,    54,    55,    56,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
    77,    78,    79,     5,   nil,    13,    14,    15,    16,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    32,   nil,
   nil,    33,   nil,   nil,    26,    27,    28,    29,   nil,   nil,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    49,   nil,   nil,   nil,   nil,    50,    51,    52,    53,
    54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
    64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
    74,    75,    76,    77,    78,    79,     5,   nil,    13,    14,
    15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
    25,    32,   nil,   nil,    33,   nil,   nil,    26,    27,    28,
    29,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    50,
    51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
    61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
    71,    72,    73,    74,    75,    76,    77,    78,    79,     5,
   nil,    13,    14,    15,    16,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    32,   nil,   nil,    33,   nil,   nil,
    26,    27,    28,    29,   nil,   nil,   nil,    42,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,
   nil,   nil,    50,    51,    52,    53,    54,    55,    56,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
    68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
    78,    79,     5,   nil,    13,    14,    15,    16,    17,    18,
    19,    20,    21,    22,    23,    24,    25,    32,   nil,    88,
    33,   nil,   nil,    26,    27,    28,    29,   nil,   nil,   nil,
    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    49,    89,   nil,   nil,   nil,    50,    51,    52,    53,    54,
    55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
    75,    76,    77,    78,    79,    90,   nil,    92,    93,    94,
    13,    14,    15,    16,    17,    18,    19,    20,    21,    22,
    23,    24,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    84,    28,    29,    13,    14,    15,    16,    17,    18,    19,
    20,    21,    22,    23,    24,    25,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    84,    28,    29,    13,    14,    15,    16,
    17,    18,    19,    20,    21,    22,    23,    24,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    84,    28,    29,    13,
    14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
    24,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    84,
    28,    29,    13,    14,    15,    16,    17,    18,    19,    20,
    21,    22,    23,    24,    25,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    84,    28,    29 ]

racc_action_check = [
     5,     5,     5,     5,     5,     5,     5,     5,     5,     5,
     5,     5,     5,    36,   100,     5,   105,    47,    47,    47,
     5,     5,     5,    36,    87,   105,   150,   150,   150,   141,
     3,    79,    40,    83,   114,   100,   114,   114,   114,   114,
   114,   114,   114,   114,   114,   114,   114,   114,   114,   114,
   141,     3,   114,    40,    83,   114,   114,   114,   114,   149,
   149,   149,   114,   144,   144,   144,   144,   143,   143,   143,
   143,     5,   114,     5,     5,     5,    50,   114,   114,   114,
   114,   114,   114,   114,   114,   114,   114,   114,   114,   114,
   114,   114,   114,   114,   114,   114,   114,   114,   114,   114,
   114,   114,   114,   114,   114,   114,   114,   112,   124,   112,
   112,   112,   112,   112,   112,   112,   112,   112,   112,   112,
   112,   112,   112,   140,   126,   112,    46,    46,   112,   112,
   112,   112,    44,    44,   130,   112,    45,    45,    45,    45,
   142,   142,   145,   145,   140,   112,   146,   146,   147,   147,
   112,   112,   112,   112,   112,   112,   112,   112,   112,   112,
   112,   112,   112,   112,   112,   112,   112,   112,   112,   112,
   112,   112,   112,   112,   112,   112,   112,   112,   112,   112,
    32,   131,    32,    32,    32,    32,    32,    32,    32,    32,
    32,    32,    32,    32,    32,    32,   148,   148,    32,   132,
   133,    32,    32,    32,    32,   134,   135,   138,    32,    49,
    43,    27,    38,    30,    11,     1,   158,   163,    32,   103,
    97,    90,    88,    32,    32,    32,    32,    32,    32,    32,
    32,    32,    32,    32,    32,    32,    32,    32,    32,    32,
    32,    32,    32,    32,    32,    32,    32,    32,    32,    32,
    32,    32,    32,   156,    80,   156,   156,   156,   156,   156,
   156,   156,   156,   156,   156,   156,   156,   156,   156,   nil,
   nil,   156,   nil,   nil,   156,   156,   156,   156,   nil,   nil,
   nil,   156,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   156,   nil,   nil,   nil,   nil,   156,   156,   156,   156,
   156,   156,   156,   156,   156,   156,   156,   156,   156,   156,
   156,   156,   156,   156,   156,   156,   156,   156,   156,   156,
   156,   156,   156,   156,   156,   156,     0,   nil,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,   nil,   nil,     0,   nil,   nil,     0,     0,     0,
     0,   nil,   nil,   nil,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     0,   nil,   nil,   nil,   nil,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,     0,   122,
   nil,   122,   122,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,   122,   nil,   nil,   122,   nil,   nil,
   122,   122,   122,   122,   nil,   nil,   nil,   122,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   122,   nil,   nil,
   nil,   nil,   122,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   122,   122,   122,   122,   122,   122,   122,   122,
   122,   122,   121,   nil,   121,   121,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,   nil,   nil,
   121,   nil,   nil,   121,   121,   121,   121,   nil,   nil,   nil,
   121,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   121,   nil,   nil,   nil,   nil,   121,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   121,   121,   121,   121,   121,
   121,   121,   121,   121,   121,   120,   nil,   120,   120,   120,
   120,   120,   120,   120,   120,   120,   120,   120,   120,   120,
   120,   nil,   nil,   120,   nil,   nil,   120,   120,   120,   120,
   nil,   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   120,   nil,   nil,   nil,   nil,   120,   120,
   120,   120,   120,   120,   120,   120,   120,   120,   120,   120,
   120,   120,   120,   120,   120,   120,   120,   120,   120,   120,
   120,   120,   120,   120,   120,   120,   120,   120,   119,   nil,
   119,   119,   119,   119,   119,   119,   119,   119,   119,   119,
   119,   119,   119,   119,   nil,   nil,   119,   nil,   nil,   119,
   119,   119,   119,   nil,   nil,   nil,   119,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   119,   nil,   nil,   nil,
   nil,   119,   119,   119,   119,   119,   119,   119,   119,   119,
   119,   119,   119,   119,   119,   119,   119,   119,   119,   119,
   119,   119,   119,   119,   119,   119,   119,   119,   119,   119,
   119,   118,   nil,   118,   118,   118,   118,   118,   118,   118,
   118,   118,   118,   118,   118,   118,   118,   nil,   nil,   118,
   nil,   nil,   118,   118,   118,   118,   nil,   nil,   nil,   118,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118,
   nil,   nil,   nil,   nil,   118,   118,   118,   118,   118,   118,
   118,   118,   118,   118,   118,   118,   118,   118,   118,   118,
   118,   118,   118,   118,   118,   118,   118,   118,   118,   118,
   118,   118,   118,   118,   117,   nil,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   117,
   nil,   nil,   117,   nil,   nil,   117,   117,   117,   117,   nil,
   nil,   nil,   117,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   117,   nil,   nil,   nil,   nil,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   117,   117,   117,
   117,   117,   117,   117,   117,   117,   117,   116,   nil,   116,
   116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   nil,   nil,   116,   nil,   nil,   116,   116,
   116,   116,   nil,   nil,   nil,   116,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   116,   nil,   nil,   nil,   nil,
   116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
   116,   116,   116,   116,   116,   116,   116,   116,   116,   116,
   102,   nil,   102,   102,   102,   102,   102,   102,   102,   102,
   102,   102,   102,   102,   102,   102,   nil,   nil,   102,   nil,
   nil,   102,   102,   102,   102,   nil,   nil,   nil,   102,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   102,   nil,
   nil,   nil,   nil,   102,   102,   102,   102,   102,   102,   102,
   102,   102,   102,   102,   102,   102,   102,   102,   102,   102,
   102,   102,   102,   102,   102,   102,   102,   102,   102,   102,
   102,   102,   102,   115,   nil,   115,   115,   115,   115,   115,
   115,   115,   115,   115,   115,   115,   115,   115,   115,   nil,
   nil,   115,   nil,   nil,   115,   115,   115,   115,   nil,   nil,
   nil,   115,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   115,   nil,   nil,   nil,   nil,   115,   115,   115,   115,
   115,   115,   115,   115,   115,   115,   115,   115,   115,   115,
   115,   115,   115,   115,   115,   115,   115,   115,   115,   115,
   115,   115,   115,   115,   115,   115,   108,   nil,   108,   108,
   108,   108,   108,   108,   108,   108,   108,   108,   108,   108,
   108,   108,   nil,   nil,   108,   nil,   nil,   108,   108,   108,
   108,   nil,   nil,   nil,   108,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   108,
   108,   108,   108,   108,   108,   108,   108,   108,   108,   108,
   108,   108,   108,   108,   108,   108,   108,   108,   108,   108,
   108,   108,   108,   108,   108,   108,   108,   108,   108,   111,
   nil,   111,   111,   111,   111,   111,   111,   111,   111,   111,
   111,   111,   111,   111,   111,   nil,   nil,   111,   nil,   nil,
   111,   111,   111,   111,   nil,   nil,   nil,   111,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   111,   nil,   nil,
   nil,   nil,   111,   111,   111,   111,   111,   111,   111,   111,
   111,   111,   111,   111,   111,   111,   111,   111,   111,   111,
   111,   111,   111,   111,   111,   111,   111,   111,   111,   111,
   111,   111,   113,   nil,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,   113,   113,   113,   nil,     9,
   113,   nil,   nil,   113,   113,   113,   113,   nil,   nil,   nil,
   113,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   113,     9,   nil,   nil,   nil,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,   113,   113,   113,   113,   113,
   113,   113,   113,   113,   113,     9,   nil,     9,     9,     9,
   110,   110,   110,   110,   110,   110,   110,   110,   110,   110,
   110,   110,   110,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   110,   110,   110,    26,    26,    26,    26,    26,    26,    26,
    26,    26,    26,    26,    26,    26,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    26,    26,    26,    81,    81,    81,    81,
    81,    81,    81,    81,    81,    81,    81,    81,    81,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    81,    81,    81,   109,
   109,   109,   109,   109,   109,   109,   109,   109,   109,   109,
   109,   109,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   109,
   109,   109,    82,    82,    82,    82,    82,    82,    82,    82,
    82,    82,    82,    82,    82,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    82,    82,    82 ]

racc_action_pointer = [
   324,   215,   nil,    28,   nil,    -4,   nil,   nil,   nil,  1200,
   nil,   211,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1299,   166,   nil,   nil,
   182,   nil,   178,   nil,   nil,   nil,    -5,   nil,   183,   nil,
    30,   nil,   nil,   178,    99,   101,    87,   -24,   nil,   165,
    52,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -44,
   254,  1322,  1368,    31,   nil,   nil,   nil,     7,   205,   nil,
   145,   nil,   nil,   nil,   nil,   nil,   nil,   144,   nil,   nil,
    12,   nil,   908,   201,   nil,    -2,   nil,   nil,  1054,  1345,
  1276,  1127,   105,  1200,    32,   981,   835,   762,   689,   616,
   543,   470,   397,   nil,    63,   nil,    48,   nil,   nil,   nil,
   113,   163,   179,   159,   130,   174,   nil,   nil,   179,   nil,
   121,    27,   107,    32,    28,   103,   107,   109,   157,    18,
   -15,   nil,   nil,   nil,   nil,   nil,   251,   nil,   198,   nil,
   nil,   nil,   nil,   195,   nil,   nil,   nil ]

racc_action_default = [
   -38,  -125,    -1,    -2,    -3,    -4,    -6,    -7,    -9,  -125,
   -11,  -125,   -13,   -16,   -17,   -18,   -19,   -20,   -21,   -22,
   -23,   -24,   -25,   -26,   -27,   -28,   -38,   -36,   -37,   -39,
   -40,   -41,   -38,   -43,   -44,   -45,  -125,   -51,   -78,   -53,
   -54,   -57,   -58,   -59,   -61,   -63,   -66,   -71,   -74,  -125,
   -80,   -84,   -85,   -86,   -87,   -88,   -89,   -90,   -91,   -92,
   -93,   -94,   -95,   -96,   -97,   -98,   -99,  -100,  -101,  -102,
  -103,  -104,  -105,  -106,  -107,  -108,  -109,  -110,  -111,  -125,
  -125,   -38,   -38,    -5,   -36,   -14,   -29,  -125,  -125,  -113,
  -124,  -115,  -116,  -117,  -118,  -119,  -120,  -125,  -122,   -12,
   -34,   -83,   -38,  -125,   -46,  -125,   -48,   -50,   -38,   -38,
   -38,   -38,   -38,   -38,   -38,   -38,   -38,   -38,   -38,   -38,
   -38,   -38,   -38,   -79,   -81,  -112,  -124,   167,    -8,   -35,
   -10,  -125,  -125,  -125,  -125,   -60,   -42,   -47,  -125,   -52,
   -55,   -56,   -62,   -64,   -65,   -67,   -68,   -69,   -70,   -72,
   -73,   -75,   -76,   -77,   -82,   -15,   -38,   -30,  -125,  -114,
  -121,  -124,   -49,  -125,   -33,   -31,   -32 ]

racc_goto_table = [
     2,    83,   106,    91,   145,   146,   147,   148,   151,   152,
   153,   143,   144,   149,   150,   128,   129,   135,   142,     1,
   160,    85,   100,   130,   155,    86,    87,   163,   105,   139,
   nil,   nil,   103,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   125,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   162,   140,   141,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   164 ]

racc_goto_check = [
     2,     4,    26,    36,    33,    33,    33,    33,    35,    35,
    35,    32,    32,    34,    34,     7,     7,    30,    31,     1,
    40,    10,     4,    11,    15,    16,    17,    18,    25,    28,
   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    26,     4,     4,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,    19,     0,   nil,    -4,   nil,   nil,   -66,   nil,   nil,
    12,   -62,   nil,   nil,   nil,  -106,    16,    17,  -129,   nil,
   nil,   nil,   nil,   nil,   nil,    -8,   -34,   nil,   -79,   nil,
   -85,   -93,  -101,  -110,  -105,  -112,    -6,   nil,   nil,   nil,
  -114 ]

racc_goto_default = [
   nil,   nil,   nil,    39,     3,     4,     6,     7,     8,     9,
   nil,   nil,    10,    11,    12,   nil,   nil,   nil,   nil,    30,
    41,    31,    34,    35,    36,   nil,   nil,    38,    37,    40,
    43,    44,    45,    46,    47,    48,   nil,    95,    96,    97,
    98 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 81, :_reduce_1,
  1, 83, :_reduce_2,
  1, 83, :_reduce_3,
  1, 85, :_reduce_4,
  2, 85, :_reduce_5,
  1, 85, :_reduce_6,
  1, 84, :_reduce_7,
  3, 84, :_reduce_8,
  1, 84, :_reduce_9,
  3, 87, :_reduce_10,
  1, 87, :_reduce_11,
  2, 89, :_reduce_12,
  1, 89, :_reduce_13,
  0, 91, :_reduce_14,
  2, 91, :_reduce_15,
  1, 93, :_reduce_16,
  1, 93, :_reduce_17,
  1, 93, :_reduce_18,
  1, 93, :_reduce_19,
  1, 93, :_reduce_20,
  1, 93, :_reduce_21,
  1, 93, :_reduce_22,
  1, 93, :_reduce_23,
  1, 93, :_reduce_24,
  1, 93, :_reduce_25,
  1, 93, :_reduce_26,
  1, 93, :_reduce_27,
  1, 93, :_reduce_28,
  1, 90, :_reduce_29,
  3, 90, :_reduce_30,
  4, 90, :_reduce_31,
  3, 95, :_reduce_32,
  1, 98, :_reduce_33,
  2, 86, :_reduce_34,
  3, 88, :_reduce_35,
  1, 92, :_reduce_36,
  1, 92, :_reduce_37,
  0, 94, :_reduce_38,
  1, 94, :_reduce_39,
  1, 82, :_reduce_40,
  1, 100, :_reduce_41,
  3, 100, :_reduce_42,
  1, 100, :_reduce_43,
  1, 100, :_reduce_44,
  1, 100, :_reduce_45,
  2, 103, :_reduce_46,
  3, 103, :_reduce_47,
  1, 105, :_reduce_48,
  3, 105, :_reduce_49,
  1, 106, :_reduce_50,
  1, 107, :_reduce_51,
  3, 107, :_reduce_52,
  1, 108, :_reduce_53,
  1, 108, :_reduce_54,
  3, 108, :_reduce_55,
  3, 108, :_reduce_56,
  1, 109, :_reduce_57,
  1, 109, :_reduce_58,
  1, 99, :_reduce_59,
  3, 99, :_reduce_60,
  1, 110, :_reduce_61,
  3, 110, :_reduce_62,
  1, 111, :_reduce_63,
  3, 111, :_reduce_64,
  3, 111, :_reduce_65,
  1, 112, :_reduce_66,
  3, 112, :_reduce_67,
  3, 112, :_reduce_68,
  3, 112, :_reduce_69,
  3, 112, :_reduce_70,
  1, 113, :_reduce_71,
  3, 113, :_reduce_72,
  3, 113, :_reduce_73,
  1, 114, :_reduce_74,
  3, 114, :_reduce_75,
  3, 114, :_reduce_76,
  3, 114, :_reduce_77,
  1, 115, :_reduce_78,
  2, 115, :_reduce_79,
  1, 102, :_reduce_80,
  2, 102, :_reduce_81,
  3, 102, :_reduce_82,
  2, 102, :_reduce_83,
  1, 104, :_reduce_84,
  1, 104, :_reduce_85,
  1, 104, :_reduce_86,
  1, 104, :_reduce_87,
  1, 104, :_reduce_88,
  1, 104, :_reduce_89,
  1, 104, :_reduce_90,
  1, 104, :_reduce_91,
  1, 104, :_reduce_92,
  1, 104, :_reduce_93,
  1, 104, :_reduce_94,
  1, 104, :_reduce_95,
  1, 104, :_reduce_96,
  1, 104, :_reduce_97,
  1, 104, :_reduce_98,
  1, 104, :_reduce_99,
  1, 104, :_reduce_100,
  1, 104, :_reduce_101,
  1, 104, :_reduce_102,
  1, 104, :_reduce_103,
  1, 104, :_reduce_104,
  1, 104, :_reduce_105,
  1, 104, :_reduce_106,
  1, 104, :_reduce_107,
  1, 104, :_reduce_108,
  1, 104, :_reduce_109,
  1, 104, :_reduce_110,
  1, 104, :_reduce_111,
  2, 101, :_reduce_112,
  1, 96, :_reduce_113,
  3, 96, :_reduce_114,
  1, 96, :_reduce_115,
  1, 97, :_reduce_116,
  1, 97, :_reduce_117,
  1, 97, :_reduce_118,
  1, 116, :_reduce_119,
  1, 116, :_reduce_120,
  3, 117, :_reduce_121,
  1, 118, :_reduce_122,
  1, 119, :_reduce_123,
  1, 120, :_reduce_124 ]

racc_reduce_n = 125

racc_shift_n = 167

racc_token_table = {
  false => 0,
  :error => 1,
  "/" => 2,
  "::" => 3,
  "ancestor" => 4,
  "ancestor-or-self" => 5,
  "attribute" => 6,
  "child" => 7,
  "descendant" => 8,
  "descendant-or-self" => 9,
  "following" => 10,
  "following-sibling" => 11,
  "namespace" => 12,
  "parent" => 13,
  "preceding" => 14,
  "preceding-sibling" => 15,
  "self" => 16,
  "(" => 17,
  ")" => 18,
  "processing-instruction" => 19,
  "Literal" => 20,
  "[" => 21,
  "]" => 22,
  "//" => 23,
  "." => 24,
  ".." => 25,
  "@" => 26,
  "," => 27,
  "Exp" => 28,
  "|" => 29,
  "FilterExpr Predicat" => 30,
  "or" => 31,
  "and" => 32,
  "=" => 33,
  "!=" => 34,
  "<" => 35,
  ">" => 36,
  "<=" => 37,
  ">=" => 38,
  "+" => 39,
  "-" => 40,
  "*" => 41,
  "div" => 42,
  "mod" => 43,
  "UnaryExp" => 44,
  "Digits" => 45,
  "last(" => 46,
  "position(" => 47,
  "count(" => 48,
  "id(" => 49,
  "local-name(" => 50,
  "namespace-uri(" => 51,
  "name(" => 52,
  "string(" => 53,
  "concat(" => 54,
  "starts-with(" => 55,
  "contains(" => 56,
  "substring-before(" => 57,
  "substring-after(" => 58,
  "substring(" => 59,
  "string-length(" => 60,
  "normalize-space(" => 61,
  "translate(" => 62,
  "boolean(" => 63,
  "not(" => 64,
  "true(" => 65,
  "false(" => 66,
  "lang(" => 67,
  "number(" => 68,
  "sum(" => 69,
  "floor(" => 70,
  "ceiling(" => 71,
  "round(" => 72,
  "current(" => 73,
  "$" => 74,
  "NCName" => 75,
  ":" => 76,
  "comment" => 77,
  "text" => 78,
  "node" => 79 }

racc_nt_base = 80

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"/\"",
  "\"::\"",
  "\"ancestor\"",
  "\"ancestor-or-self\"",
  "\"attribute\"",
  "\"child\"",
  "\"descendant\"",
  "\"descendant-or-self\"",
  "\"following\"",
  "\"following-sibling\"",
  "\"namespace\"",
  "\"parent\"",
  "\"preceding\"",
  "\"preceding-sibling\"",
  "\"self\"",
  "\"(\"",
  "\")\"",
  "\"processing-instruction\"",
  "\"Literal\"",
  "\"[\"",
  "\"]\"",
  "\"//\"",
  "\".\"",
  "\"..\"",
  "\"@\"",
  "\",\"",
  "\"Exp\"",
  "\"|\"",
  "\"FilterExpr Predicat\"",
  "\"or\"",
  "\"and\"",
  "\"=\"",
  "\"!=\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"div\"",
  "\"mod\"",
  "\"UnaryExp\"",
  "\"Digits\"",
  "\"last(\"",
  "\"position(\"",
  "\"count(\"",
  "\"id(\"",
  "\"local-name(\"",
  "\"namespace-uri(\"",
  "\"name(\"",
  "\"string(\"",
  "\"concat(\"",
  "\"starts-with(\"",
  "\"contains(\"",
  "\"substring-before(\"",
  "\"substring-after(\"",
  "\"substring(\"",
  "\"string-length(\"",
  "\"normalize-space(\"",
  "\"translate(\"",
  "\"boolean(\"",
  "\"not(\"",
  "\"true(\"",
  "\"false(\"",
  "\"lang(\"",
  "\"number(\"",
  "\"sum(\"",
  "\"floor(\"",
  "\"ceiling(\"",
  "\"round(\"",
  "\"current(\"",
  "\"$\"",
  "\"NCName\"",
  "\":\"",
  "\"comment\"",
  "\"text\"",
  "\"node\"",
  "$start",
  "statement",
  "\"Expr\"",
  "\"LocationPath\"",
  "\"RelativeLocationPath\"",
  "\"AbsoluteLocationPath\"",
  "\"AbbreviatedAbsoluteLocationPath\"",
  "\"Step\"",
  "\"AbbreviatedRelativeLocationPath\"",
  "\"AxisSpecifier\"",
  "\"NodeTest\"",
  "\"Predicates\"",
  "\"AbbreviatedStep\"",
  "\"AxisName\"",
  "\"AbbreviatedAxisSpecifier\"",
  "\"Predicate\"",
  "\"NameTest\"",
  "\"NodeType\"",
  "\"PredicateExpr\"",
  "\"OrExpr\"",
  "\"PrimaryExpr\"",
  "\"VariableReference\"",
  "\"Number\"",
  "\"FunctionCall\"",
  "\"FunctionName(\"",
  "\"Arguments\"",
  "\"Argument\"",
  "\"UnionExpr\"",
  "\"PathExpr\"",
  "\"FilterExpr\"",
  "\"AndExpr\"",
  "\"EqualityExpr\"",
  "\"RelationalExpr\"",
  "\"AdditiveExpr\"",
  "\"MultiplicativeExpr\"",
  "\"UnaryExpr\"",
  "\"QName\"",
  "\"PrefixedName\"",
  "\"UnprefixedName\"",
  "\"Prefix\"",
  "\"LocalPart\"" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_1(val, _values, result)
    								@@logger.debug { 'statement : Expr' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Expr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 12)
  def _reduce_2(val, _values, result)
    								@@logger.debug { '"LocationPath" : "RelativeLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_3(val, _values, result)
    								@@logger.debug { '"LocationPath" : "AbsoluteLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_4(val, _values, result)
    								@@logger.debug { '"AbsoluteLocationPath" : "/"' }
								@@logger.debug { "val: #{val.inspect}" }
								axis = Rubyang::Xpath::Axis.new Rubyang::Xpath::Axis::SELF
								node_test = Rubyang::Xpath::NodeTest.new Rubyang::Xpath::NodeTest::NodeTestType::NAME_TEST, '/'
								predicates = Rubyang::Xpath::Predicates.new
								location_step = Rubyang::Xpath::LocationStep.new axis, node_test, predicates
								result = Rubyang::Xpath::LocationPath.new location_step
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_5(val, _values, result)
    								@@logger.debug { '"AbsoluteLocationPath" : "/" "RelativeLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								axis = Rubyang::Xpath::Axis.new Rubyang::Xpath::Axis::SELF
								node_test = Rubyang::Xpath::NodeTest.new Rubyang::Xpath::NodeTest::NodeTestType::NAME_TEST, '/'
								predicates = Rubyang::Xpath::Predicates.new
								location_step = Rubyang::Xpath::LocationStep.new axis, node_test, predicates
								result = Rubyang::Xpath::LocationPath.new location_step, *(val[1].location_step_sequence)
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_6(val, _values, result)
    								@@logger.debug { '"AbsoluteLocationPath" : "AbbreviatedAbsoluteLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_7(val, _values, result)
    								@@logger.debug { '"RelativeLocationPath" : "Step"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::LocationPath.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_8(val, _values, result)
    								@@logger.debug { '"RelativeLocationPath" : "RelativeLocationPath" "/" "Step"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0].add val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 64)
  def _reduce_9(val, _values, result)
    								@@logger.debug { '"RelativeLocationPath" : "AbbreviatedRelativeLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 71)
  def _reduce_10(val, _values, result)
    								@@logger.debug { '"Step" : "AxisSpecifier" "NodeTest" "Predicates"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::LocationStep.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 77)
  def _reduce_11(val, _values, result)
    								@@logger.debug { '"Step" : "AbbreviatedStep"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_12(val, _values, result)
    								@@logger.debug { '"AxisSpecifier" : "AxisName" "::"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 90)
  def _reduce_13(val, _values, result)
    								@@logger.debug { '"AxisSpecifier" : "AbbreviatedAxisSpecifier"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_14(val, _values, result)
    								result = Rubyang::Xpath::Predicates.new
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 101)
  def _reduce_15(val, _values, result)
    								@@logger.debug { '"Predicates" : "Predicates" "Predicate"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0].push val[1]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 108)
  def _reduce_16(val, _values, result)
    								@@logger.debug { '"AxisName" : "ancestor"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::ANCESTOR
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 114)
  def _reduce_17(val, _values, result)
    								@@logger.debug { '"AxisName" : "ancestor-or-self"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::ANCESTOR_OR_SELF
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_18(val, _values, result)
    								@@logger.debug { '"AxisName" : "attribute"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::ATTRIBUTE
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 126)
  def _reduce_19(val, _values, result)
    								@@logger.debug { '"AxisName" : "child"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::CHILD
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 132)
  def _reduce_20(val, _values, result)
    								@@logger.debug { '"AxisName" : "descendant"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::DESCENDANT
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_21(val, _values, result)
    								@@logger.debug { '"AxisName" : "descendant-or-self"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::DESCENDANT_OR_SELF
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_22(val, _values, result)
    								@@logger.debug { '"AxisName" : "following"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::FOLLOWING
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 150)
  def _reduce_23(val, _values, result)
    								@@logger.debug { '"AxisName" : "following-sibling"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::FOLLOWING_SIBLING
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 156)
  def _reduce_24(val, _values, result)
    								@@logger.debug { '"AxisName" : "namespace"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::NAMESPACE
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 162)
  def _reduce_25(val, _values, result)
    								@@logger.debug { '"AxisName" : "parent"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::PARENT
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_26(val, _values, result)
    								@@logger.debug { '"AxisName" : "preceding"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::PRECEDING
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 174)
  def _reduce_27(val, _values, result)
    								@@logger.debug { '"AxisName" : "preceding-sibling"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::PRECEDING_SIBLING
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 180)
  def _reduce_28(val, _values, result)
    								@@logger.debug { '"AxisName" : "self"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::SELF
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 187)
  def _reduce_29(val, _values, result)
    								@@logger.debug { '"NodeTest" : "NameTest"' }
								@@logger.debug { "val: #{val.inspect}" }
								name_test_type = Rubyang::Xpath::NodeTest::NodeTestType::NAME_TEST
								result = Rubyang::Xpath::NodeTest.new name_test_type, val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 194)
  def _reduce_30(val, _values, result)
    								@@logger.debug { '"NodeTest" : "NodeType" "(" ")"' }
								@@logger.debug { "val: #{val.inspect}" }
								name_test_type = Rubyang::Xpath::NodeTest::NodeTestType::NODE_TYPE
								result = Rubyang::Xpath::NodeTest.new name_test_type, val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 201)
  def _reduce_31(val, _values, result)
    								@@logger.debug { '"NodeTest" : "processing-instruction" "(" "Literal" ")"' }
								@@logger.debug { "val: #{val.inspect}" }
								name_test_type = Rubyang::Xpath::NodeTest::NodeTestType::PROCESSING_INSTRUCTION
								result = Rubyang::Xpath::NodeTest.new name_test_type, val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 209)
  def _reduce_32(val, _values, result)
    								@@logger.debug { '"Predicate" : "[" "PredicateExpr" "]"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Predicate.new val[1]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 216)
  def _reduce_33(val, _values, result)
    								@@logger.debug { '"PredicateExpr" : "Expr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 223)
  def _reduce_34(val, _values, result)
    								@@logger.debug { '"AbbreviatedAbsoluteLocationPath" : "//" "RelativeLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								raise "AbbreviatedAbsoluteLocationPath is not implemented"
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 231)
  def _reduce_35(val, _values, result)
    								@@logger.debug { '"AbbreviatedRelativeLocationPath" : "RelativeLocationPath" "//" "Step"' }
								@@logger.debug { "val: #{val.inspect}" }
								raise "AbbreviatedRelativeLocationPath is not implemented"
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 239)
  def _reduce_36(val, _values, result)
    								@@logger.debug { '"AbbreviatedStep" : "."' }
								@@logger.debug { "val: #{val.inspect}" }
								axis = Rubyang::Xpath::Axis.new Rubyang::Xpath::Axis::SELF
								node_test = Rubyang::Xpath::NodeTest.new Rubyang::Xpath::NodeTest::NodeTestType::NAME_TEST, '*'
								predicates = Rubyang::Xpath::Predicates.new
								result = Rubyang::Xpath::LocationStep.new axis, node_test, predicates
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 248)
  def _reduce_37(val, _values, result)
    								@@logger.debug { '"AbbreviatedStep" : ".."' }
								@@logger.debug { "val: #{val.inspect}" }
								axis = Rubyang::Xpath::Axis.new Rubyang::Xpath::Axis::PARENT
								node_test = Rubyang::Xpath::NodeTest.new Rubyang::Xpath::NodeTest::NodeTestType::NODE_TYPE, Rubyang::Xpath::NodeTest::NodeType::NODE
								predicates = Rubyang::Xpath::Predicates.new
								result = Rubyang::Xpath::LocationStep.new axis, node_test, predicates
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 258)
  def _reduce_38(val, _values, result)
    								@@logger.debug { '"AbbreviatedAxisSpecifier" : ' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::CHILD
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 264)
  def _reduce_39(val, _values, result)
    								@@logger.debug { '"AbbreviatedAxisSpecifier" : "@"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::Axis::ATTRIBUTE
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 271)
  def _reduce_40(val, _values, result)
    								@@logger.debug { '"Expr" : "OrExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 278)
  def _reduce_41(val, _values, result)
    								@@logger.debug { '"PrimaryExpr" : "VariableReference"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								raise "VariableReference is not implemented"
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 285)
  def _reduce_42(val, _values, result)
    								@@logger.debug { '"PrimaryExpr" : "(" "Expr" ")"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[1]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 291)
  def _reduce_43(val, _values, result)
    								@@logger.debug { '"PrimaryExpr" : "Literal"' }
								@@logger.debug { "val: #{val.inspect}" }
								literal = Rubyang::Xpath::Literal.new val[0]
								result = Rubyang::Xpath::PrimaryExpr.new literal
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 298)
  def _reduce_44(val, _values, result)
    								@@logger.debug { '"PrimaryExpr" : "Number"' }
								@@logger.debug { "val: #{val.inspect}" }
								number = Rubyang::Xpath::Number.new val[0]
								result = Rubyang::Xpath::PrimaryExpr.new number
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 305)
  def _reduce_45(val, _values, result)
    								@@logger.debug { '"PrimaryExpr" : "FunctionCall"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::PrimaryExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 312)
  def _reduce_46(val, _values, result)
    								@@logger.debug { '"FunctionCall" : "FunctionName(" ")"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 318)
  def _reduce_47(val, _values, result)
    								@@logger.debug { '"FunctionCall" : "FunctionName(" "Arguments" ")"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall.new val[0], val[1]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 325)
  def _reduce_48(val, _values, result)
    								@@logger.debug { '"Arguments" : "Argument"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = [val[0]]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 331)
  def _reduce_49(val, _values, result)
    								@@logger.debug { '"Arguments" : "Arguments" "," "Argument"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0] + [val[1]]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 338)
  def _reduce_50(val, _values, result)
    								@@logger.debug { '"Argument" : "Exp"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 345)
  def _reduce_51(val, _values, result)
    								@@logger.debug { '"UnionExpr" : "PathExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::UnionExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 351)
  def _reduce_52(val, _values, result)
    								@@logger.debug { '"UnionExpr" : "UnionExpr" "|" "PathExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::UnionExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 358)
  def _reduce_53(val, _values, result)
    								@@logger.debug { '"PathExpr" : "LocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::PathExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 364)
  def _reduce_54(val, _values, result)
    								@@logger.debug { '"PathExpr" : "FilterExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::PathExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 370)
  def _reduce_55(val, _values, result)
    								@@logger.debug { '"PathExpr" : "FilterExpr" "/" "RelativeLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::PathExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 376)
  def _reduce_56(val, _values, result)
    								@@logger.debug { '"PathExpr" : "FilterExpr" "//" "RelativeLocationPath"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::PathExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 383)
  def _reduce_57(val, _values, result)
    								@@logger.debug { '"FilterExpr" : "PrimaryExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FilterExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 389)
  def _reduce_58(val, _values, result)
    								@@logger.debug { '"FilterExpr" : "FilterExpr Predicat"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FilterExpr.new val[0], val[1]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 396)
  def _reduce_59(val, _values, result)
    								@@logger.debug { '"OrExpr" : "AndExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::OrExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 402)
  def _reduce_60(val, _values, result)
    								@@logger.debug { '"OrExpr" : "OrExpr" "or" "AndExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::OrExpr.new val[0], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 409)
  def _reduce_61(val, _values, result)
    								@@logger.debug { '"AndExpr" : "EqualityExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::AndExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 415)
  def _reduce_62(val, _values, result)
    								@@logger.debug { '"AndExpr" : "AndExpr" "and" "EqualityExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::AndExpr.new val[0], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 422)
  def _reduce_63(val, _values, result)
    								@@logger.debug { '"EqualityExpr" : "RelationalExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::EqualityExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 428)
  def _reduce_64(val, _values, result)
    								@@logger.debug { '"EqualityExpr" : "EqualityExpr" "=" "RelationalExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::EqualityExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 434)
  def _reduce_65(val, _values, result)
    								@@logger.debug { '"EqualityExpr" : "EqualityExpr" "!=" "RelationalExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::EqualityExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 441)
  def _reduce_66(val, _values, result)
    								@@logger.debug { '"RelationalExpr" : "AdditiveExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::RelationalExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 447)
  def _reduce_67(val, _values, result)
    								@@logger.debug { '"RelationalExpr" : "RelationalExpr" "<" "AdditiveExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::RelationalExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 453)
  def _reduce_68(val, _values, result)
    								@@logger.debug { '"RelationalExpr" : "RelationalExpr" ">" "AdditiveExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::RelationalExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 459)
  def _reduce_69(val, _values, result)
    								@@logger.debug { '"RelationalExpr" : "RelationalExpr" "<=" "AdditiveExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::RelationalExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 465)
  def _reduce_70(val, _values, result)
    								@@logger.debug { '"RelationalExpr" : "RelationalExpr" ">=" "AdditiveExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::RelationalExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 472)
  def _reduce_71(val, _values, result)
    								@@logger.debug { '"AdditiveExpr" : "MultiplicativeExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::AdditiveExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 478)
  def _reduce_72(val, _values, result)
    								@@logger.debug { '"AdditiveExpr" : "AdditiveExpr" "+" "MultiplicativeExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::AdditiveExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 484)
  def _reduce_73(val, _values, result)
    								@@logger.debug { '"AdditiveExpr" : "AdditiveExpr" "-" "MultiplicativeExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::AdditiveExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 491)
  def _reduce_74(val, _values, result)
    								@@logger.debug { '"MultiplicativeExpr" : "UnaryExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::MultiplicativeExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 497)
  def _reduce_75(val, _values, result)
    								@@logger.debug { '"MultiplicativeExpr" : "MultiplicativeExpr" "*" "UnaryExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::MultiplicativeExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 503)
  def _reduce_76(val, _values, result)
    								@@logger.debug { '"MultiplicativeExpr" : "MultiplicativeExpr" "div" "UnaryExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::MultiplicativeExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 509)
  def _reduce_77(val, _values, result)
    								@@logger.debug { '"MultiplicativeExpr" : "MultiplicativeExpr" "mod" "UnaryExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::MultiplicativeExpr.new val[0], val[1], val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 516)
  def _reduce_78(val, _values, result)
    								@@logger.debug { '"UnaryExp" : "UnionExpr"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::UnaryExpr.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 522)
  def _reduce_79(val, _values, result)
    								@@logger.debug { '"UnaryExp" : "-" "UnaryExp"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::UnaryExpr.new val[1], val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 529)
  def _reduce_80(val, _values, result)
    								@@logger.debug { '"Number" : "Digits"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 535)
  def _reduce_81(val, _values, result)
    								@@logger.debug { '"Number" : "Digits" "."' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 541)
  def _reduce_82(val, _values, result)
    								@@logger.debug { '"Number" : "Digits" "." "Digits"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0] + val[1] + val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 547)
  def _reduce_83(val, _values, result)
    								@@logger.debug { '"Number" : "." "Digits"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = "0" + val[1] + val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 554)
  def _reduce_84(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "last("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 560)
  def _reduce_85(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "position("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall::LAST
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 567)
  def _reduce_86(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "count("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall::LAST
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 574)
  def _reduce_87(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "id("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall::LAST
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 581)
  def _reduce_88(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "local-name("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 588)
  def _reduce_89(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "namespace-uri("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 595)
  def _reduce_90(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "name("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 602)
  def _reduce_91(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "string("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 609)
  def _reduce_92(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "concat("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 616)
  def _reduce_93(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "starts-with("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 623)
  def _reduce_94(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "contains("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 630)
  def _reduce_95(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "substring-before("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 637)
  def _reduce_96(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "substring-after("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 644)
  def _reduce_97(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "substring("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 651)
  def _reduce_98(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "string-length("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 658)
  def _reduce_99(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "normalize-space("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 665)
  def _reduce_100(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "translate("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 672)
  def _reduce_101(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "boolean("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 679)
  def _reduce_102(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "not("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 686)
  def _reduce_103(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "true("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 693)
  def _reduce_104(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "false("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 700)
  def _reduce_105(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "lang("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 707)
  def _reduce_106(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "number("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 714)
  def _reduce_107(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "sum("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 721)
  def _reduce_108(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "floor("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 728)
  def _reduce_109(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "ceiling("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 735)
  def _reduce_110(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "round("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
								result = Rubyang::Xpath::FunctionCall::LAST
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 742)
  def _reduce_111(val, _values, result)
    								@@logger.debug { '"FunctionName(" : "current("' }
								@@logger.debug { "val: #{val.inspect}" }
								result = Rubyang::Xpath::FunctionCall::CURRENT
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 749)
  def _reduce_112(val, _values, result)
    								@@logger.debug { '"VariableReference" : "$" "QName"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 756)
  def _reduce_113(val, _values, result)
    								@@logger.debug { '"NameTest" : "*"' }
								@@logger.debug { "val: #{val.inspect}" }
								Rubyang::Xpath::NodeTest::NameTest.new '*'
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 762)
  def _reduce_114(val, _values, result)
    								@@logger.debug { '"NameTest" : "NCName" ":" "*"' }
								@@logger.debug { "val: #{val.inspect}" }
								Rubyang::Xpath::NodeTest::NameTest.new "#{val[0]}:*"
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 768)
  def _reduce_115(val, _values, result)
    								@@logger.debug { '"NameTest" : "QName"' }
								@@logger.debug { "val: #{val.inspect}" }
								Rubyang::Xpath::NodeTest::NameTest.new val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 775)
  def _reduce_116(val, _values, result)
    								@@logger.debug { '"NodeType" : "comment"' }
								@@logger.debug { "val: #{val.inspect}" }
								Rubyang::Xpath::NodeTest::NodeType::COMMENT
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 781)
  def _reduce_117(val, _values, result)
    								@@logger.debug { '"NodeType" : "text"' }
								@@logger.debug { "val: #{val.inspect}" }
								Rubyang::Xpath::NodeTest::NodeType::TEXT
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 787)
  def _reduce_118(val, _values, result)
    								@@logger.debug { '"NodeType" : "node"' }
								@@logger.debug { "val: #{val.inspect}" }
								Rubyang::Xpath::NodeTest::NodeType::NODE
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 794)
  def _reduce_119(val, _values, result)
    								@@logger.debug { '"QName" : "PrefixedName"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 800)
  def _reduce_120(val, _values, result)
    								@@logger.debug { '"QName" : "UnprefixedName"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 807)
  def _reduce_121(val, _values, result)
    								@@logger.debug { '"PrefixedName" : "Prefix" ":" "LocalPart"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0] + val[1] + val[2]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 814)
  def _reduce_122(val, _values, result)
    								@@logger.debug { '"UnprefixedName" : "LocalPart"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 821)
  def _reduce_123(val, _values, result)
    								@@logger.debug { '"Prefix" : "NCName"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 828)
  def _reduce_124(val, _values, result)
    								@@logger.debug { '"LocalPart" : "NCName"' }
								@@logger.debug { "val: #{val.inspect}" }
								result = val[0]
							
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module Xpath
  end   # module Rubyang
